'


Teórico:


Gestión de procesos y threads.
Exclusión mutua, sincronización y
  comunicación entre procesos.
Algoritmos para modelos basados en memoria compartida y paso
  de mensajes. Semáforos y Monitores. Llamadas a
  procedimiento remoto (RPC)
Bibliotecas de programación concurrente y
  distribuida.
Paradigmas de integración de procesos en sistemas
  distribuidos (cliente-servidor, peer to peer).


Práctico:


Familiarizar al alumno con la gestión de
  procesos.
Utilización del lenguaje de programación Java
  como herramienta de programación en sistemas
  distribuidos

 


Contenidos desarrollados:


Teoría:

Tema 1. Introducción.

           
1.1- Introducción a los sistemas distribuidos.

           
1.2- Ejemplos de sistemas distribuidos.

           
1.3- Recursos compartidos y Web.
Tema 2. Características de los
sistemas distribuidos.

           
2.1- Heterogeneidad.

           
2.2- Extensibilidad.

           
2.3- Seguridad.

           
2.4- Escalabilidad.

           
2.5- Tratamiento de fallos.

           
2.6- Concurrencia.

           
2.7- Transparencia.
Tema 3. Modelo
arquitectónico.

           
3.1- Introducción.

           
3.2- Capas de software.

           
3.3- Arquitecturas de sistema.

           
3.4- Variaciones en el modelo de cliente-servidor.

           
3.5- Interfaces y objetos

           
3.6- Requisitos de diseño para arquitectura
distribuidas.
Tema 4. Modelos fundamentales.

           
4.1- Modelo de interacción.

           
4.2- Modelo de fallo.

           
4.3- Modelo de seguridad.
Tema 5. Mecanismos básicos de
comunicación entre procesos.

           
5.1- Introducción a la interconexión de redes.

           
5.2- Introducción a la comunicación entre
procesos.

           
5.3- API para los protocolos de Internet.
Tema 6. Modelo cliente-servidor y
comunicación en grupos.

           
6.1- Comunicación cliente-servidor.

           
6.2- Comunicación en grupo.
Tema 7. Comunicación entre
procesos: Sockets y llamadas a procedimientos remotos (RPC).

           
7.1- Sockets.

           
7.2- Comunicación de datagramas UDP.

           
7.3- Comunicación de streams TCP.

           
7.4- Representación externa de datos y empaquetado.

           
7.5- Llamada a un procedimiento remoto: Caso de estudio Sun
RPC.
Tema 8. Comunicación entre
objetos distribuidos: RMI y CORBA.
  
         8.1-
Introducción a los objetos distribuidos.

           
8.2- Comunicación entre objetos distribuidos.

           
8.3- Eventos y notificaciones.

           
8.4- Java RMI.

           
8.5- CORBA RMI y servicios.

Prácticas


Práctica 1: Introducción a la
  programación en Java.
Práctica 2: Herencia y polimorfismo en Java.
Práctica 3: Generación de entorno de ventanas
  en Java.
Práctica 4: Utilización de RMI con entorno de
  ventanas en Java.
Practica 5: Comunicación de procesos a traves de
  socket. 

'